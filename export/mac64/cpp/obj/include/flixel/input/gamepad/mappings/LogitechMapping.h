// Generated by Haxe 3.3.0
#ifndef INCLUDED_flixel_input_gamepad_mappings_LogitechMapping
#define INCLUDED_flixel_input_gamepad_mappings_LogitechMapping

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_input_gamepad_mappings_FlxGamepadMapping
#include <flixel/input/gamepad/mappings/FlxGamepadMapping.h>
#endif
HX_DECLARE_CLASS3(flixel,input,gamepad,FlxGamepadAttachment)
HX_DECLARE_CLASS4(flixel,input,gamepad,mappings,FlxGamepadMapping)
HX_DECLARE_CLASS4(flixel,input,gamepad,mappings,LogitechMapping)

namespace flixel{
namespace input{
namespace gamepad{
namespace mappings{


class HXCPP_CLASS_ATTRIBUTES LogitechMapping_obj : public  ::flixel::input::gamepad::mappings::FlxGamepadMapping_obj
{
	public:
		typedef  ::flixel::input::gamepad::mappings::FlxGamepadMapping_obj super;
		typedef LogitechMapping_obj OBJ_;
		LogitechMapping_obj();

	public:
		void __construct(::hx::EnumBase attachment);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="flixel.input.gamepad.mappings.LogitechMapping")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"flixel.input.gamepad.mappings.LogitechMapping"); }
		static hx::ObjectPtr< LogitechMapping_obj > __new(::hx::EnumBase attachment);
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~LogitechMapping_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("LogitechMapping","\xf3","\x87","\xa0","\xcf"); }

		static void __boot();
		static Int LEFT_ANALOG_STICK_FAKE_X;
		static Int LEFT_ANALOG_STICK_FAKE_Y;
		static Int RIGHT_ANALOG_STICK_FAKE_X;
		static Int RIGHT_ANALOG_STICK_FAKE_Y;
		void initValues();

		Int getID(Int rawID);

		Int getRawID(Int ID);

		Int axisIndexToRawID(Int axisID);

};

} // end namespace flixel
} // end namespace input
} // end namespace gamepad
} // end namespace mappings

#endif /* INCLUDED_flixel_input_gamepad_mappings_LogitechMapping */ 
