// Generated by Haxe 3.3.0
#ifndef INCLUDED_flixel_input_gamepad_id_PS4ID
#define INCLUDED_flixel_input_gamepad_id_PS4ID

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(flixel,input,gamepad,FlxGamepadAnalogStick)
HX_DECLARE_CLASS4(flixel,input,gamepad,id,PS4ID)

namespace flixel{
namespace input{
namespace gamepad{
namespace id{


class HXCPP_CLASS_ATTRIBUTES PS4ID_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef PS4ID_obj OBJ_;
		PS4ID_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="flixel.input.gamepad.id.PS4ID")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"flixel.input.gamepad.id.PS4ID"); }
		static hx::ObjectPtr< PS4ID_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~PS4ID_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("PS4ID","\xec","\xd2","\x12","\x47"); }

		static void __boot();
		static Int SQUARE;
		static Int X;
		static Int CIRCLE;
		static Int TRIANGLE;
		static Int L1;
		static Int R1;
		static Int SHARE;
		static Int OPTIONS;
		static Int LEFT_STICK_CLICK;
		static Int RIGHT_STICK_CLICK;
		static Int PS;
		static Int TOUCHPAD_CLICK;
		static Int L2;
		static Int R2;
		static  ::flixel::input::gamepad::FlxGamepadAnalogStick LEFT_ANALOG_STICK;
		static  ::flixel::input::gamepad::FlxGamepadAnalogStick RIGHT_ANALOG_STICK;
		static Int DPAD_LEFT;
		static Int DPAD_RIGHT;
		static Int DPAD_DOWN;
		static Int DPAD_UP;
};

} // end namespace flixel
} // end namespace input
} // end namespace gamepad
} // end namespace id

#endif /* INCLUDED_flixel_input_gamepad_id_PS4ID */ 
