// Generated by Haxe 3.3.0
#ifndef INCLUDED_flixel_input_gamepad_lists_FlxGamepadAnalogStateList
#define INCLUDED_flixel_input_gamepad_lists_FlxGamepadAnalogStateList

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(flixel,input,gamepad,FlxGamepad)
HX_DECLARE_CLASS4(flixel,input,gamepad,lists,FlxGamepadAnalogStateList)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)

namespace flixel{
namespace input{
namespace gamepad{
namespace lists{


class HXCPP_CLASS_ATTRIBUTES FlxGamepadAnalogStateList_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef FlxGamepadAnalogStateList_obj OBJ_;
		FlxGamepadAnalogStateList_obj();

	public:
		void __construct(Int status, ::flixel::input::gamepad::FlxGamepad gamepad);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="flixel.input.gamepad.lists.FlxGamepadAnalogStateList")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"flixel.input.gamepad.lists.FlxGamepadAnalogStateList"); }
		static hx::ObjectPtr< FlxGamepadAnalogStateList_obj > __new(Int status, ::flixel::input::gamepad::FlxGamepad gamepad);
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~FlxGamepadAnalogStateList_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		::String __ToString() const { return HX_HCSTRING("FlxGamepadAnalogStateList","\x10","\xe1","\xb0","\xbc"); }

		 ::flixel::input::gamepad::FlxGamepad gamepad;
		Int status;
		Bool get_LEFT_STICK();
		::Dynamic get_LEFT_STICK_dyn();

		Bool get_LEFT_STICK_X();
		::Dynamic get_LEFT_STICK_X_dyn();

		Bool get_LEFT_STICK_Y();
		::Dynamic get_LEFT_STICK_Y_dyn();

		Bool get_RIGHT_STICK();
		::Dynamic get_RIGHT_STICK_dyn();

		Bool get_RIGHT_STICK_X();
		::Dynamic get_RIGHT_STICK_X_dyn();

		Bool get_RIGHT_STICK_Y();
		::Dynamic get_RIGHT_STICK_Y_dyn();

		Bool checkXY(Int id);
		::Dynamic checkXY_dyn();

		Bool checkX(Int id);
		::Dynamic checkX_dyn();

		Bool checkY(Int id);
		::Dynamic checkY_dyn();

		Bool checkRaw(Int RawID,Int Status);
		::Dynamic checkRaw_dyn();

};

} // end namespace flixel
} // end namespace input
} // end namespace gamepad
} // end namespace lists

#endif /* INCLUDED_flixel_input_gamepad_lists_FlxGamepadAnalogStateList */ 
