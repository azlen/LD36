// Generated by Haxe 3.3.0
#ifndef INCLUDED_openfl__legacy_Memory
#define INCLUDED_openfl__legacy_Memory

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(haxe,io,Bytes)
HX_DECLARE_CLASS2(openfl,_legacy,Memory)
HX_DECLARE_CLASS3(openfl,_legacy,utils,ByteArray)
HX_DECLARE_CLASS3(openfl,_legacy,utils,IDataInput)
HX_DECLARE_CLASS3(openfl,_legacy,utils,IDataOutput)
HX_DECLARE_CLASS3(openfl,_legacy,utils,IMemoryRange)

namespace openfl{
namespace _legacy{


class HXCPP_CLASS_ATTRIBUTES Memory_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Memory_obj OBJ_;
		Memory_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="openfl._legacy.Memory")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"openfl._legacy.Memory"); }
		static hx::ObjectPtr< Memory_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Memory_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		::String __ToString() const { return HX_HCSTRING("Memory","\x21","\x3f","\x54","\x39"); }

		static  ::openfl::_legacy::utils::ByteArray gcRef;
		static Int len;
		static void select( ::openfl::_legacy::utils::ByteArray bytes);
		static ::Dynamic select_dyn();

		static Int getByte(Int addr);
		static ::Dynamic getByte_dyn();

		static Float getDouble(Int addr);
		static ::Dynamic getDouble_dyn();

		static Float getFloat(Int addr);
		static ::Dynamic getFloat_dyn();

		static Int getI32(Int addr);
		static ::Dynamic getI32_dyn();

		static Int getUI16(Int addr);
		static ::Dynamic getUI16_dyn();

		static void setByte(Int addr,Int v);
		static ::Dynamic setByte_dyn();

		static void setDouble(Int addr,Float v);
		static ::Dynamic setDouble_dyn();

		static void setFloat(Int addr,Float v);
		static ::Dynamic setFloat_dyn();

		static void setI16(Int addr,Int v);
		static ::Dynamic setI16_dyn();

		static void setI32(Int addr,Int v);
		static ::Dynamic setI32_dyn();

};

} // end namespace openfl
} // end namespace _legacy

#endif /* INCLUDED_openfl__legacy_Memory */ 
