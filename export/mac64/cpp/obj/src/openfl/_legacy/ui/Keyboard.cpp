// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_openfl__legacy_ui_Keyboard
#include <openfl/_legacy/ui/Keyboard.h>
#endif

namespace openfl{
namespace _legacy{
namespace ui{

void Keyboard_obj::__construct() { }

Dynamic Keyboard_obj::__CreateEmpty() { return new Keyboard_obj; }

hx::ObjectPtr< Keyboard_obj > Keyboard_obj::__new()
{
	hx::ObjectPtr< Keyboard_obj > _hx_result = new Keyboard_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic Keyboard_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Keyboard_obj > _hx_result = new Keyboard_obj();
	_hx_result->__construct();
	return _hx_result;
}

Int Keyboard_obj::A;

Int Keyboard_obj::B;

Int Keyboard_obj::C;

Int Keyboard_obj::D;

Int Keyboard_obj::E;

Int Keyboard_obj::F;

Int Keyboard_obj::G;

Int Keyboard_obj::H;

Int Keyboard_obj::I;

Int Keyboard_obj::J;

Int Keyboard_obj::K;

Int Keyboard_obj::L;

Int Keyboard_obj::M;

Int Keyboard_obj::N;

Int Keyboard_obj::O;

Int Keyboard_obj::P;

Int Keyboard_obj::Q;

Int Keyboard_obj::R;

Int Keyboard_obj::S;

Int Keyboard_obj::T;

Int Keyboard_obj::U;

Int Keyboard_obj::V;

Int Keyboard_obj::W;

Int Keyboard_obj::X;

Int Keyboard_obj::Y;

Int Keyboard_obj::Z;

Int Keyboard_obj::ALTERNATE;

Int Keyboard_obj::BACKQUOTE;

Int Keyboard_obj::BACKSLASH;

Int Keyboard_obj::BACKSPACE;

Int Keyboard_obj::BREAK;

Int Keyboard_obj::CAPS_LOCK;

Int Keyboard_obj::COMMA;

Int Keyboard_obj::COMMAND;

Int Keyboard_obj::CONTROL;

Int Keyboard_obj::DELETE;

Int Keyboard_obj::DOWN;

Int Keyboard_obj::END;

Int Keyboard_obj::ENTER;

Int Keyboard_obj::EQUAL;

Int Keyboard_obj::ESCAPE;

Int Keyboard_obj::F1;

Int Keyboard_obj::F2;

Int Keyboard_obj::F3;

Int Keyboard_obj::F4;

Int Keyboard_obj::F5;

Int Keyboard_obj::F6;

Int Keyboard_obj::F7;

Int Keyboard_obj::F8;

Int Keyboard_obj::F9;

Int Keyboard_obj::F10;

Int Keyboard_obj::F11;

Int Keyboard_obj::F12;

Int Keyboard_obj::F13;

Int Keyboard_obj::F14;

Int Keyboard_obj::F15;

Int Keyboard_obj::HOME;

Int Keyboard_obj::INSERT;

Int Keyboard_obj::LEFT;

Int Keyboard_obj::LEFTBRACKET;

Int Keyboard_obj::MINUS;

Int Keyboard_obj::NUMBER_0;

Int Keyboard_obj::NUMBER_1;

Int Keyboard_obj::NUMBER_2;

Int Keyboard_obj::NUMBER_3;

Int Keyboard_obj::NUMBER_4;

Int Keyboard_obj::NUMBER_5;

Int Keyboard_obj::NUMBER_6;

Int Keyboard_obj::NUMBER_7;

Int Keyboard_obj::NUMBER_8;

Int Keyboard_obj::NUMBER_9;

Int Keyboard_obj::NUMLOCK;

Int Keyboard_obj::NUMPAD;

Int Keyboard_obj::NUMPAD_0;

Int Keyboard_obj::NUMPAD_1;

Int Keyboard_obj::NUMPAD_2;

Int Keyboard_obj::NUMPAD_3;

Int Keyboard_obj::NUMPAD_4;

Int Keyboard_obj::NUMPAD_5;

Int Keyboard_obj::NUMPAD_6;

Int Keyboard_obj::NUMPAD_7;

Int Keyboard_obj::NUMPAD_8;

Int Keyboard_obj::NUMPAD_9;

Int Keyboard_obj::NUMPAD_ADD;

Int Keyboard_obj::NUMPAD_DECIMAL;

Int Keyboard_obj::NUMPAD_DIVIDE;

Int Keyboard_obj::NUMPAD_ENTER;

Int Keyboard_obj::NUMPAD_MULTIPLY;

Int Keyboard_obj::NUMPAD_SUBTRACT;

Int Keyboard_obj::PAGE_DOWN;

Int Keyboard_obj::PAGE_UP;

Int Keyboard_obj::PERIOD;

Int Keyboard_obj::QUOTE;

Int Keyboard_obj::RIGHT;

Int Keyboard_obj::RIGHTBRACKET;

Int Keyboard_obj::SEMICOLON;

Int Keyboard_obj::SHIFT;

Int Keyboard_obj::SLASH;

Int Keyboard_obj::SPACE;

Int Keyboard_obj::TAB;

Int Keyboard_obj::UP;


Keyboard_obj::Keyboard_obj()
{
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Keyboard_obj_sMemberStorageInfo = 0;
static hx::StaticInfo Keyboard_obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &Keyboard_obj::A,HX_HCSTRING("A","\x41","\x00","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::B,HX_HCSTRING("B","\x42","\x00","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::C,HX_HCSTRING("C","\x43","\x00","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::D,HX_HCSTRING("D","\x44","\x00","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::E,HX_HCSTRING("E","\x45","\x00","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::F,HX_HCSTRING("F","\x46","\x00","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::G,HX_HCSTRING("G","\x47","\x00","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::H,HX_HCSTRING("H","\x48","\x00","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::I,HX_HCSTRING("I","\x49","\x00","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::J,HX_HCSTRING("J","\x4a","\x00","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::K,HX_HCSTRING("K","\x4b","\x00","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::L,HX_HCSTRING("L","\x4c","\x00","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::M,HX_HCSTRING("M","\x4d","\x00","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::N,HX_HCSTRING("N","\x4e","\x00","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::O,HX_HCSTRING("O","\x4f","\x00","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::P,HX_HCSTRING("P","\x50","\x00","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::Q,HX_HCSTRING("Q","\x51","\x00","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::R,HX_HCSTRING("R","\x52","\x00","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::S,HX_HCSTRING("S","\x53","\x00","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::T,HX_HCSTRING("T","\x54","\x00","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::U,HX_HCSTRING("U","\x55","\x00","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::V,HX_HCSTRING("V","\x56","\x00","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::W,HX_HCSTRING("W","\x57","\x00","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::X,HX_HCSTRING("X","\x58","\x00","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::Y,HX_HCSTRING("Y","\x59","\x00","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::Z,HX_HCSTRING("Z","\x5a","\x00","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::ALTERNATE,HX_HCSTRING("ALTERNATE","\x1a","\x39","\x8c","\x30")},
	{hx::fsInt,(void *) &Keyboard_obj::BACKQUOTE,HX_HCSTRING("BACKQUOTE","\x95","\x8b","\xce","\xa2")},
	{hx::fsInt,(void *) &Keyboard_obj::BACKSLASH,HX_HCSTRING("BACKSLASH","\x96","\x28","\x9e","\xc3")},
	{hx::fsInt,(void *) &Keyboard_obj::BACKSPACE,HX_HCSTRING("BACKSPACE","\x1f","\xf5","\x42","\xc6")},
	{hx::fsInt,(void *) &Keyboard_obj::BREAK,HX_HCSTRING("BREAK","\x9f","\x5c","\xda","\x36")},
	{hx::fsInt,(void *) &Keyboard_obj::CAPS_LOCK,HX_HCSTRING("CAPS_LOCK","\x09","\x04","\xdb","\xce")},
	{hx::fsInt,(void *) &Keyboard_obj::COMMA,HX_HCSTRING("COMMA","\xb5","\x69","\x4b","\xc8")},
	{hx::fsInt,(void *) &Keyboard_obj::COMMAND,HX_HCSTRING("COMMAND","\x2b","\x45","\x41","\x01")},
	{hx::fsInt,(void *) &Keyboard_obj::CONTROL,HX_HCSTRING("CONTROL","\x3d","\x3f","\x55","\x99")},
	{hx::fsInt,(void *) &Keyboard_obj::DELETE,HX_HCSTRING("DELETE","\x2b","\x6c","\x5b","\x1d")},
	{hx::fsInt,(void *) &Keyboard_obj::DOWN,HX_HCSTRING("DOWN","\x62","\xc0","\x2e","\x2d")},
	{hx::fsInt,(void *) &Keyboard_obj::END,HX_HCSTRING("END","\xbb","\x9f","\x34","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::ENTER,HX_HCSTRING("ENTER","\xf8","\xa4","\x74","\xee")},
	{hx::fsInt,(void *) &Keyboard_obj::EQUAL,HX_HCSTRING("EQUAL","\x94","\x07","\x71","\xf0")},
	{hx::fsInt,(void *) &Keyboard_obj::ESCAPE,HX_HCSTRING("ESCAPE","\x81","\xef","\x5c","\x8d")},
	{hx::fsInt,(void *) &Keyboard_obj::F1,HX_HCSTRING("F1","\x2b","\x3d","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::F2,HX_HCSTRING("F2","\x2c","\x3d","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::F3,HX_HCSTRING("F3","\x2d","\x3d","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::F4,HX_HCSTRING("F4","\x2e","\x3d","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::F5,HX_HCSTRING("F5","\x2f","\x3d","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::F6,HX_HCSTRING("F6","\x30","\x3d","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::F7,HX_HCSTRING("F7","\x31","\x3d","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::F8,HX_HCSTRING("F8","\x32","\x3d","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::F9,HX_HCSTRING("F9","\x33","\x3d","\x00","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::F10,HX_HCSTRING("F10","\xa5","\x48","\x35","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::F11,HX_HCSTRING("F11","\xa6","\x48","\x35","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::F12,HX_HCSTRING("F12","\xa7","\x48","\x35","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::F13,HX_HCSTRING("F13","\xa8","\x48","\x35","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::F14,HX_HCSTRING("F14","\xa9","\x48","\x35","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::F15,HX_HCSTRING("F15","\xaa","\x48","\x35","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::HOME,HX_HCSTRING("HOME","\x1f","\x92","\xd3","\x2f")},
	{hx::fsInt,(void *) &Keyboard_obj::INSERT,HX_HCSTRING("INSERT","\x39","\xef","\x5f","\x50")},
	{hx::fsInt,(void *) &Keyboard_obj::LEFT,HX_HCSTRING("LEFT","\x07","\xd0","\x70","\x32")},
	{hx::fsInt,(void *) &Keyboard_obj::LEFTBRACKET,HX_HCSTRING("LEFTBRACKET","\xe1","\xa8","\x04","\xa4")},
	{hx::fsInt,(void *) &Keyboard_obj::MINUS,HX_HCSTRING("MINUS","\x50","\xb8","\x56","\x86")},
	{hx::fsInt,(void *) &Keyboard_obj::NUMBER_0,HX_HCSTRING("NUMBER_0","\xfa","\x89","\xc6","\x33")},
	{hx::fsInt,(void *) &Keyboard_obj::NUMBER_1,HX_HCSTRING("NUMBER_1","\xfb","\x89","\xc6","\x33")},
	{hx::fsInt,(void *) &Keyboard_obj::NUMBER_2,HX_HCSTRING("NUMBER_2","\xfc","\x89","\xc6","\x33")},
	{hx::fsInt,(void *) &Keyboard_obj::NUMBER_3,HX_HCSTRING("NUMBER_3","\xfd","\x89","\xc6","\x33")},
	{hx::fsInt,(void *) &Keyboard_obj::NUMBER_4,HX_HCSTRING("NUMBER_4","\xfe","\x89","\xc6","\x33")},
	{hx::fsInt,(void *) &Keyboard_obj::NUMBER_5,HX_HCSTRING("NUMBER_5","\xff","\x89","\xc6","\x33")},
	{hx::fsInt,(void *) &Keyboard_obj::NUMBER_6,HX_HCSTRING("NUMBER_6","\x00","\x8a","\xc6","\x33")},
	{hx::fsInt,(void *) &Keyboard_obj::NUMBER_7,HX_HCSTRING("NUMBER_7","\x01","\x8a","\xc6","\x33")},
	{hx::fsInt,(void *) &Keyboard_obj::NUMBER_8,HX_HCSTRING("NUMBER_8","\x02","\x8a","\xc6","\x33")},
	{hx::fsInt,(void *) &Keyboard_obj::NUMBER_9,HX_HCSTRING("NUMBER_9","\x03","\x8a","\xc6","\x33")},
	{hx::fsInt,(void *) &Keyboard_obj::NUMLOCK,HX_HCSTRING("NUMLOCK","\x11","\xe9","\x32","\x30")},
	{hx::fsInt,(void *) &Keyboard_obj::NUMPAD,HX_HCSTRING("NUMPAD","\xcd","\xce","\x07","\x54")},
	{hx::fsInt,(void *) &Keyboard_obj::NUMPAD_0,HX_HCSTRING("NUMPAD_0","\xfe","\x2e","\xb3","\x40")},
	{hx::fsInt,(void *) &Keyboard_obj::NUMPAD_1,HX_HCSTRING("NUMPAD_1","\xff","\x2e","\xb3","\x40")},
	{hx::fsInt,(void *) &Keyboard_obj::NUMPAD_2,HX_HCSTRING("NUMPAD_2","\x00","\x2f","\xb3","\x40")},
	{hx::fsInt,(void *) &Keyboard_obj::NUMPAD_3,HX_HCSTRING("NUMPAD_3","\x01","\x2f","\xb3","\x40")},
	{hx::fsInt,(void *) &Keyboard_obj::NUMPAD_4,HX_HCSTRING("NUMPAD_4","\x02","\x2f","\xb3","\x40")},
	{hx::fsInt,(void *) &Keyboard_obj::NUMPAD_5,HX_HCSTRING("NUMPAD_5","\x03","\x2f","\xb3","\x40")},
	{hx::fsInt,(void *) &Keyboard_obj::NUMPAD_6,HX_HCSTRING("NUMPAD_6","\x04","\x2f","\xb3","\x40")},
	{hx::fsInt,(void *) &Keyboard_obj::NUMPAD_7,HX_HCSTRING("NUMPAD_7","\x05","\x2f","\xb3","\x40")},
	{hx::fsInt,(void *) &Keyboard_obj::NUMPAD_8,HX_HCSTRING("NUMPAD_8","\x06","\x2f","\xb3","\x40")},
	{hx::fsInt,(void *) &Keyboard_obj::NUMPAD_9,HX_HCSTRING("NUMPAD_9","\x07","\x2f","\xb3","\x40")},
	{hx::fsInt,(void *) &Keyboard_obj::NUMPAD_ADD,HX_HCSTRING("NUMPAD_ADD","\x4f","\x8c","\x28","\x37")},
	{hx::fsInt,(void *) &Keyboard_obj::NUMPAD_DECIMAL,HX_HCSTRING("NUMPAD_DECIMAL","\xbf","\xc5","\x36","\x01")},
	{hx::fsInt,(void *) &Keyboard_obj::NUMPAD_DIVIDE,HX_HCSTRING("NUMPAD_DIVIDE","\xeb","\x41","\x1f","\x90")},
	{hx::fsInt,(void *) &Keyboard_obj::NUMPAD_ENTER,HX_HCSTRING("NUMPAD_ENTER","\xc6","\x52","\xe2","\x0f")},
	{hx::fsInt,(void *) &Keyboard_obj::NUMPAD_MULTIPLY,HX_HCSTRING("NUMPAD_MULTIPLY","\x16","\xd9","\xd8","\x96")},
	{hx::fsInt,(void *) &Keyboard_obj::NUMPAD_SUBTRACT,HX_HCSTRING("NUMPAD_SUBTRACT","\x06","\x6c","\x5d","\xf4")},
	{hx::fsInt,(void *) &Keyboard_obj::PAGE_DOWN,HX_HCSTRING("PAGE_DOWN","\x92","\x7b","\x93","\x70")},
	{hx::fsInt,(void *) &Keyboard_obj::PAGE_UP,HX_HCSTRING("PAGE_UP","\x8b","\xd9","\x3e","\x0b")},
	{hx::fsInt,(void *) &Keyboard_obj::PERIOD,HX_HCSTRING("PERIOD","\x01","\x0d","\x9e","\xed")},
	{hx::fsInt,(void *) &Keyboard_obj::QUOTE,HX_HCSTRING("QUOTE","\x1c","\x5b","\xe0","\xdb")},
	{hx::fsInt,(void *) &Keyboard_obj::RIGHT,HX_HCSTRING("RIGHT","\xbc","\x43","\x52","\x67")},
	{hx::fsInt,(void *) &Keyboard_obj::RIGHTBRACKET,HX_HCSTRING("RIGHTBRACKET","\xcc","\x45","\x32","\x57")},
	{hx::fsInt,(void *) &Keyboard_obj::SEMICOLON,HX_HCSTRING("SEMICOLON","\x11","\x86","\x2a","\x49")},
	{hx::fsInt,(void *) &Keyboard_obj::SHIFT,HX_HCSTRING("SHIFT","\x62","\x24","\x11","\xfa")},
	{hx::fsInt,(void *) &Keyboard_obj::SLASH,HX_HCSTRING("SLASH","\x1d","\xf8","\xaf","\xfc")},
	{hx::fsInt,(void *) &Keyboard_obj::SPACE,HX_HCSTRING("SPACE","\xa6","\xc4","\x54","\xff")},
	{hx::fsInt,(void *) &Keyboard_obj::TAB,HX_HCSTRING("TAB","\x35","\xf6","\x3f","\x00")},
	{hx::fsInt,(void *) &Keyboard_obj::UP,HX_HCSTRING("UP","\x5b","\x4a","\x00","\x00")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void Keyboard_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Keyboard_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Keyboard_obj::A,"A");
	HX_MARK_MEMBER_NAME(Keyboard_obj::B,"B");
	HX_MARK_MEMBER_NAME(Keyboard_obj::C,"C");
	HX_MARK_MEMBER_NAME(Keyboard_obj::D,"D");
	HX_MARK_MEMBER_NAME(Keyboard_obj::E,"E");
	HX_MARK_MEMBER_NAME(Keyboard_obj::F,"F");
	HX_MARK_MEMBER_NAME(Keyboard_obj::G,"G");
	HX_MARK_MEMBER_NAME(Keyboard_obj::H,"H");
	HX_MARK_MEMBER_NAME(Keyboard_obj::I,"I");
	HX_MARK_MEMBER_NAME(Keyboard_obj::J,"J");
	HX_MARK_MEMBER_NAME(Keyboard_obj::K,"K");
	HX_MARK_MEMBER_NAME(Keyboard_obj::L,"L");
	HX_MARK_MEMBER_NAME(Keyboard_obj::M,"M");
	HX_MARK_MEMBER_NAME(Keyboard_obj::N,"N");
	HX_MARK_MEMBER_NAME(Keyboard_obj::O,"O");
	HX_MARK_MEMBER_NAME(Keyboard_obj::P,"P");
	HX_MARK_MEMBER_NAME(Keyboard_obj::Q,"Q");
	HX_MARK_MEMBER_NAME(Keyboard_obj::R,"R");
	HX_MARK_MEMBER_NAME(Keyboard_obj::S,"S");
	HX_MARK_MEMBER_NAME(Keyboard_obj::T,"T");
	HX_MARK_MEMBER_NAME(Keyboard_obj::U,"U");
	HX_MARK_MEMBER_NAME(Keyboard_obj::V,"V");
	HX_MARK_MEMBER_NAME(Keyboard_obj::W,"W");
	HX_MARK_MEMBER_NAME(Keyboard_obj::X,"X");
	HX_MARK_MEMBER_NAME(Keyboard_obj::Y,"Y");
	HX_MARK_MEMBER_NAME(Keyboard_obj::Z,"Z");
	HX_MARK_MEMBER_NAME(Keyboard_obj::ALTERNATE,"ALTERNATE");
	HX_MARK_MEMBER_NAME(Keyboard_obj::BACKQUOTE,"BACKQUOTE");
	HX_MARK_MEMBER_NAME(Keyboard_obj::BACKSLASH,"BACKSLASH");
	HX_MARK_MEMBER_NAME(Keyboard_obj::BACKSPACE,"BACKSPACE");
	HX_MARK_MEMBER_NAME(Keyboard_obj::BREAK,"BREAK");
	HX_MARK_MEMBER_NAME(Keyboard_obj::CAPS_LOCK,"CAPS_LOCK");
	HX_MARK_MEMBER_NAME(Keyboard_obj::COMMA,"COMMA");
	HX_MARK_MEMBER_NAME(Keyboard_obj::COMMAND,"COMMAND");
	HX_MARK_MEMBER_NAME(Keyboard_obj::CONTROL,"CONTROL");
	HX_MARK_MEMBER_NAME(Keyboard_obj::DELETE,"DELETE");
	HX_MARK_MEMBER_NAME(Keyboard_obj::DOWN,"DOWN");
	HX_MARK_MEMBER_NAME(Keyboard_obj::END,"END");
	HX_MARK_MEMBER_NAME(Keyboard_obj::ENTER,"ENTER");
	HX_MARK_MEMBER_NAME(Keyboard_obj::EQUAL,"EQUAL");
	HX_MARK_MEMBER_NAME(Keyboard_obj::ESCAPE,"ESCAPE");
	HX_MARK_MEMBER_NAME(Keyboard_obj::F1,"F1");
	HX_MARK_MEMBER_NAME(Keyboard_obj::F2,"F2");
	HX_MARK_MEMBER_NAME(Keyboard_obj::F3,"F3");
	HX_MARK_MEMBER_NAME(Keyboard_obj::F4,"F4");
	HX_MARK_MEMBER_NAME(Keyboard_obj::F5,"F5");
	HX_MARK_MEMBER_NAME(Keyboard_obj::F6,"F6");
	HX_MARK_MEMBER_NAME(Keyboard_obj::F7,"F7");
	HX_MARK_MEMBER_NAME(Keyboard_obj::F8,"F8");
	HX_MARK_MEMBER_NAME(Keyboard_obj::F9,"F9");
	HX_MARK_MEMBER_NAME(Keyboard_obj::F10,"F10");
	HX_MARK_MEMBER_NAME(Keyboard_obj::F11,"F11");
	HX_MARK_MEMBER_NAME(Keyboard_obj::F12,"F12");
	HX_MARK_MEMBER_NAME(Keyboard_obj::F13,"F13");
	HX_MARK_MEMBER_NAME(Keyboard_obj::F14,"F14");
	HX_MARK_MEMBER_NAME(Keyboard_obj::F15,"F15");
	HX_MARK_MEMBER_NAME(Keyboard_obj::HOME,"HOME");
	HX_MARK_MEMBER_NAME(Keyboard_obj::INSERT,"INSERT");
	HX_MARK_MEMBER_NAME(Keyboard_obj::LEFT,"LEFT");
	HX_MARK_MEMBER_NAME(Keyboard_obj::LEFTBRACKET,"LEFTBRACKET");
	HX_MARK_MEMBER_NAME(Keyboard_obj::MINUS,"MINUS");
	HX_MARK_MEMBER_NAME(Keyboard_obj::NUMBER_0,"NUMBER_0");
	HX_MARK_MEMBER_NAME(Keyboard_obj::NUMBER_1,"NUMBER_1");
	HX_MARK_MEMBER_NAME(Keyboard_obj::NUMBER_2,"NUMBER_2");
	HX_MARK_MEMBER_NAME(Keyboard_obj::NUMBER_3,"NUMBER_3");
	HX_MARK_MEMBER_NAME(Keyboard_obj::NUMBER_4,"NUMBER_4");
	HX_MARK_MEMBER_NAME(Keyboard_obj::NUMBER_5,"NUMBER_5");
	HX_MARK_MEMBER_NAME(Keyboard_obj::NUMBER_6,"NUMBER_6");
	HX_MARK_MEMBER_NAME(Keyboard_obj::NUMBER_7,"NUMBER_7");
	HX_MARK_MEMBER_NAME(Keyboard_obj::NUMBER_8,"NUMBER_8");
	HX_MARK_MEMBER_NAME(Keyboard_obj::NUMBER_9,"NUMBER_9");
	HX_MARK_MEMBER_NAME(Keyboard_obj::NUMLOCK,"NUMLOCK");
	HX_MARK_MEMBER_NAME(Keyboard_obj::NUMPAD,"NUMPAD");
	HX_MARK_MEMBER_NAME(Keyboard_obj::NUMPAD_0,"NUMPAD_0");
	HX_MARK_MEMBER_NAME(Keyboard_obj::NUMPAD_1,"NUMPAD_1");
	HX_MARK_MEMBER_NAME(Keyboard_obj::NUMPAD_2,"NUMPAD_2");
	HX_MARK_MEMBER_NAME(Keyboard_obj::NUMPAD_3,"NUMPAD_3");
	HX_MARK_MEMBER_NAME(Keyboard_obj::NUMPAD_4,"NUMPAD_4");
	HX_MARK_MEMBER_NAME(Keyboard_obj::NUMPAD_5,"NUMPAD_5");
	HX_MARK_MEMBER_NAME(Keyboard_obj::NUMPAD_6,"NUMPAD_6");
	HX_MARK_MEMBER_NAME(Keyboard_obj::NUMPAD_7,"NUMPAD_7");
	HX_MARK_MEMBER_NAME(Keyboard_obj::NUMPAD_8,"NUMPAD_8");
	HX_MARK_MEMBER_NAME(Keyboard_obj::NUMPAD_9,"NUMPAD_9");
	HX_MARK_MEMBER_NAME(Keyboard_obj::NUMPAD_ADD,"NUMPAD_ADD");
	HX_MARK_MEMBER_NAME(Keyboard_obj::NUMPAD_DECIMAL,"NUMPAD_DECIMAL");
	HX_MARK_MEMBER_NAME(Keyboard_obj::NUMPAD_DIVIDE,"NUMPAD_DIVIDE");
	HX_MARK_MEMBER_NAME(Keyboard_obj::NUMPAD_ENTER,"NUMPAD_ENTER");
	HX_MARK_MEMBER_NAME(Keyboard_obj::NUMPAD_MULTIPLY,"NUMPAD_MULTIPLY");
	HX_MARK_MEMBER_NAME(Keyboard_obj::NUMPAD_SUBTRACT,"NUMPAD_SUBTRACT");
	HX_MARK_MEMBER_NAME(Keyboard_obj::PAGE_DOWN,"PAGE_DOWN");
	HX_MARK_MEMBER_NAME(Keyboard_obj::PAGE_UP,"PAGE_UP");
	HX_MARK_MEMBER_NAME(Keyboard_obj::PERIOD,"PERIOD");
	HX_MARK_MEMBER_NAME(Keyboard_obj::QUOTE,"QUOTE");
	HX_MARK_MEMBER_NAME(Keyboard_obj::RIGHT,"RIGHT");
	HX_MARK_MEMBER_NAME(Keyboard_obj::RIGHTBRACKET,"RIGHTBRACKET");
	HX_MARK_MEMBER_NAME(Keyboard_obj::SEMICOLON,"SEMICOLON");
	HX_MARK_MEMBER_NAME(Keyboard_obj::SHIFT,"SHIFT");
	HX_MARK_MEMBER_NAME(Keyboard_obj::SLASH,"SLASH");
	HX_MARK_MEMBER_NAME(Keyboard_obj::SPACE,"SPACE");
	HX_MARK_MEMBER_NAME(Keyboard_obj::TAB,"TAB");
	HX_MARK_MEMBER_NAME(Keyboard_obj::UP,"UP");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Keyboard_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Keyboard_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::A,"A");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::B,"B");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::C,"C");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::D,"D");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::E,"E");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::F,"F");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::G,"G");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::H,"H");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::I,"I");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::J,"J");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::K,"K");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::L,"L");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::M,"M");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::N,"N");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::O,"O");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::P,"P");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::Q,"Q");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::R,"R");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::S,"S");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::T,"T");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::U,"U");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::V,"V");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::W,"W");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::X,"X");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::Y,"Y");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::Z,"Z");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::ALTERNATE,"ALTERNATE");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::BACKQUOTE,"BACKQUOTE");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::BACKSLASH,"BACKSLASH");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::BACKSPACE,"BACKSPACE");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::BREAK,"BREAK");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::CAPS_LOCK,"CAPS_LOCK");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::COMMA,"COMMA");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::COMMAND,"COMMAND");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::CONTROL,"CONTROL");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::DELETE,"DELETE");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::DOWN,"DOWN");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::END,"END");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::ENTER,"ENTER");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::EQUAL,"EQUAL");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::ESCAPE,"ESCAPE");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::F1,"F1");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::F2,"F2");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::F3,"F3");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::F4,"F4");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::F5,"F5");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::F6,"F6");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::F7,"F7");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::F8,"F8");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::F9,"F9");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::F10,"F10");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::F11,"F11");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::F12,"F12");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::F13,"F13");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::F14,"F14");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::F15,"F15");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::HOME,"HOME");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::INSERT,"INSERT");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::LEFT,"LEFT");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::LEFTBRACKET,"LEFTBRACKET");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::MINUS,"MINUS");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::NUMBER_0,"NUMBER_0");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::NUMBER_1,"NUMBER_1");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::NUMBER_2,"NUMBER_2");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::NUMBER_3,"NUMBER_3");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::NUMBER_4,"NUMBER_4");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::NUMBER_5,"NUMBER_5");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::NUMBER_6,"NUMBER_6");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::NUMBER_7,"NUMBER_7");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::NUMBER_8,"NUMBER_8");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::NUMBER_9,"NUMBER_9");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::NUMLOCK,"NUMLOCK");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::NUMPAD,"NUMPAD");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::NUMPAD_0,"NUMPAD_0");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::NUMPAD_1,"NUMPAD_1");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::NUMPAD_2,"NUMPAD_2");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::NUMPAD_3,"NUMPAD_3");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::NUMPAD_4,"NUMPAD_4");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::NUMPAD_5,"NUMPAD_5");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::NUMPAD_6,"NUMPAD_6");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::NUMPAD_7,"NUMPAD_7");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::NUMPAD_8,"NUMPAD_8");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::NUMPAD_9,"NUMPAD_9");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::NUMPAD_ADD,"NUMPAD_ADD");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::NUMPAD_DECIMAL,"NUMPAD_DECIMAL");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::NUMPAD_DIVIDE,"NUMPAD_DIVIDE");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::NUMPAD_ENTER,"NUMPAD_ENTER");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::NUMPAD_MULTIPLY,"NUMPAD_MULTIPLY");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::NUMPAD_SUBTRACT,"NUMPAD_SUBTRACT");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::PAGE_DOWN,"PAGE_DOWN");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::PAGE_UP,"PAGE_UP");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::PERIOD,"PERIOD");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::QUOTE,"QUOTE");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::RIGHT,"RIGHT");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::RIGHTBRACKET,"RIGHTBRACKET");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::SEMICOLON,"SEMICOLON");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::SHIFT,"SHIFT");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::SLASH,"SLASH");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::SPACE,"SPACE");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::TAB,"TAB");
	HX_VISIT_MEMBER_NAME(Keyboard_obj::UP,"UP");
};

#endif

hx::Class Keyboard_obj::__mClass;

static ::String Keyboard_obj_sStaticFields[] = {
	HX_HCSTRING("A","\x41","\x00","\x00","\x00"),
	HX_HCSTRING("B","\x42","\x00","\x00","\x00"),
	HX_HCSTRING("C","\x43","\x00","\x00","\x00"),
	HX_HCSTRING("D","\x44","\x00","\x00","\x00"),
	HX_HCSTRING("E","\x45","\x00","\x00","\x00"),
	HX_HCSTRING("F","\x46","\x00","\x00","\x00"),
	HX_HCSTRING("G","\x47","\x00","\x00","\x00"),
	HX_HCSTRING("H","\x48","\x00","\x00","\x00"),
	HX_HCSTRING("I","\x49","\x00","\x00","\x00"),
	HX_HCSTRING("J","\x4a","\x00","\x00","\x00"),
	HX_HCSTRING("K","\x4b","\x00","\x00","\x00"),
	HX_HCSTRING("L","\x4c","\x00","\x00","\x00"),
	HX_HCSTRING("M","\x4d","\x00","\x00","\x00"),
	HX_HCSTRING("N","\x4e","\x00","\x00","\x00"),
	HX_HCSTRING("O","\x4f","\x00","\x00","\x00"),
	HX_HCSTRING("P","\x50","\x00","\x00","\x00"),
	HX_HCSTRING("Q","\x51","\x00","\x00","\x00"),
	HX_HCSTRING("R","\x52","\x00","\x00","\x00"),
	HX_HCSTRING("S","\x53","\x00","\x00","\x00"),
	HX_HCSTRING("T","\x54","\x00","\x00","\x00"),
	HX_HCSTRING("U","\x55","\x00","\x00","\x00"),
	HX_HCSTRING("V","\x56","\x00","\x00","\x00"),
	HX_HCSTRING("W","\x57","\x00","\x00","\x00"),
	HX_HCSTRING("X","\x58","\x00","\x00","\x00"),
	HX_HCSTRING("Y","\x59","\x00","\x00","\x00"),
	HX_HCSTRING("Z","\x5a","\x00","\x00","\x00"),
	HX_HCSTRING("ALTERNATE","\x1a","\x39","\x8c","\x30"),
	HX_HCSTRING("BACKQUOTE","\x95","\x8b","\xce","\xa2"),
	HX_HCSTRING("BACKSLASH","\x96","\x28","\x9e","\xc3"),
	HX_HCSTRING("BACKSPACE","\x1f","\xf5","\x42","\xc6"),
	HX_HCSTRING("BREAK","\x9f","\x5c","\xda","\x36"),
	HX_HCSTRING("CAPS_LOCK","\x09","\x04","\xdb","\xce"),
	HX_HCSTRING("COMMA","\xb5","\x69","\x4b","\xc8"),
	HX_HCSTRING("COMMAND","\x2b","\x45","\x41","\x01"),
	HX_HCSTRING("CONTROL","\x3d","\x3f","\x55","\x99"),
	HX_HCSTRING("DELETE","\x2b","\x6c","\x5b","\x1d"),
	HX_HCSTRING("DOWN","\x62","\xc0","\x2e","\x2d"),
	HX_HCSTRING("END","\xbb","\x9f","\x34","\x00"),
	HX_HCSTRING("ENTER","\xf8","\xa4","\x74","\xee"),
	HX_HCSTRING("EQUAL","\x94","\x07","\x71","\xf0"),
	HX_HCSTRING("ESCAPE","\x81","\xef","\x5c","\x8d"),
	HX_HCSTRING("F1","\x2b","\x3d","\x00","\x00"),
	HX_HCSTRING("F2","\x2c","\x3d","\x00","\x00"),
	HX_HCSTRING("F3","\x2d","\x3d","\x00","\x00"),
	HX_HCSTRING("F4","\x2e","\x3d","\x00","\x00"),
	HX_HCSTRING("F5","\x2f","\x3d","\x00","\x00"),
	HX_HCSTRING("F6","\x30","\x3d","\x00","\x00"),
	HX_HCSTRING("F7","\x31","\x3d","\x00","\x00"),
	HX_HCSTRING("F8","\x32","\x3d","\x00","\x00"),
	HX_HCSTRING("F9","\x33","\x3d","\x00","\x00"),
	HX_HCSTRING("F10","\xa5","\x48","\x35","\x00"),
	HX_HCSTRING("F11","\xa6","\x48","\x35","\x00"),
	HX_HCSTRING("F12","\xa7","\x48","\x35","\x00"),
	HX_HCSTRING("F13","\xa8","\x48","\x35","\x00"),
	HX_HCSTRING("F14","\xa9","\x48","\x35","\x00"),
	HX_HCSTRING("F15","\xaa","\x48","\x35","\x00"),
	HX_HCSTRING("HOME","\x1f","\x92","\xd3","\x2f"),
	HX_HCSTRING("INSERT","\x39","\xef","\x5f","\x50"),
	HX_HCSTRING("LEFT","\x07","\xd0","\x70","\x32"),
	HX_HCSTRING("LEFTBRACKET","\xe1","\xa8","\x04","\xa4"),
	HX_HCSTRING("MINUS","\x50","\xb8","\x56","\x86"),
	HX_HCSTRING("NUMBER_0","\xfa","\x89","\xc6","\x33"),
	HX_HCSTRING("NUMBER_1","\xfb","\x89","\xc6","\x33"),
	HX_HCSTRING("NUMBER_2","\xfc","\x89","\xc6","\x33"),
	HX_HCSTRING("NUMBER_3","\xfd","\x89","\xc6","\x33"),
	HX_HCSTRING("NUMBER_4","\xfe","\x89","\xc6","\x33"),
	HX_HCSTRING("NUMBER_5","\xff","\x89","\xc6","\x33"),
	HX_HCSTRING("NUMBER_6","\x00","\x8a","\xc6","\x33"),
	HX_HCSTRING("NUMBER_7","\x01","\x8a","\xc6","\x33"),
	HX_HCSTRING("NUMBER_8","\x02","\x8a","\xc6","\x33"),
	HX_HCSTRING("NUMBER_9","\x03","\x8a","\xc6","\x33"),
	HX_HCSTRING("NUMLOCK","\x11","\xe9","\x32","\x30"),
	HX_HCSTRING("NUMPAD","\xcd","\xce","\x07","\x54"),
	HX_HCSTRING("NUMPAD_0","\xfe","\x2e","\xb3","\x40"),
	HX_HCSTRING("NUMPAD_1","\xff","\x2e","\xb3","\x40"),
	HX_HCSTRING("NUMPAD_2","\x00","\x2f","\xb3","\x40"),
	HX_HCSTRING("NUMPAD_3","\x01","\x2f","\xb3","\x40"),
	HX_HCSTRING("NUMPAD_4","\x02","\x2f","\xb3","\x40"),
	HX_HCSTRING("NUMPAD_5","\x03","\x2f","\xb3","\x40"),
	HX_HCSTRING("NUMPAD_6","\x04","\x2f","\xb3","\x40"),
	HX_HCSTRING("NUMPAD_7","\x05","\x2f","\xb3","\x40"),
	HX_HCSTRING("NUMPAD_8","\x06","\x2f","\xb3","\x40"),
	HX_HCSTRING("NUMPAD_9","\x07","\x2f","\xb3","\x40"),
	HX_HCSTRING("NUMPAD_ADD","\x4f","\x8c","\x28","\x37"),
	HX_HCSTRING("NUMPAD_DECIMAL","\xbf","\xc5","\x36","\x01"),
	HX_HCSTRING("NUMPAD_DIVIDE","\xeb","\x41","\x1f","\x90"),
	HX_HCSTRING("NUMPAD_ENTER","\xc6","\x52","\xe2","\x0f"),
	HX_HCSTRING("NUMPAD_MULTIPLY","\x16","\xd9","\xd8","\x96"),
	HX_HCSTRING("NUMPAD_SUBTRACT","\x06","\x6c","\x5d","\xf4"),
	HX_HCSTRING("PAGE_DOWN","\x92","\x7b","\x93","\x70"),
	HX_HCSTRING("PAGE_UP","\x8b","\xd9","\x3e","\x0b"),
	HX_HCSTRING("PERIOD","\x01","\x0d","\x9e","\xed"),
	HX_HCSTRING("QUOTE","\x1c","\x5b","\xe0","\xdb"),
	HX_HCSTRING("RIGHT","\xbc","\x43","\x52","\x67"),
	HX_HCSTRING("RIGHTBRACKET","\xcc","\x45","\x32","\x57"),
	HX_HCSTRING("SEMICOLON","\x11","\x86","\x2a","\x49"),
	HX_HCSTRING("SHIFT","\x62","\x24","\x11","\xfa"),
	HX_HCSTRING("SLASH","\x1d","\xf8","\xaf","\xfc"),
	HX_HCSTRING("SPACE","\xa6","\xc4","\x54","\xff"),
	HX_HCSTRING("TAB","\x35","\xf6","\x3f","\x00"),
	HX_HCSTRING("UP","\x5b","\x4a","\x00","\x00"),
	::String(null())
};

void Keyboard_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl._legacy.ui.Keyboard","\xbd","\x20","\x7b","\x65");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Keyboard_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Keyboard_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Keyboard_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Keyboard_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Keyboard_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Keyboard_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Keyboard_obj::__boot()
{
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",7,0xf4374c42)
HXLINE(   7)		A = (int)65;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",8,0xf4374c42)
HXLINE(   8)		B = (int)66;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",9,0xf4374c42)
HXLINE(   9)		C = (int)67;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",10,0xf4374c42)
HXLINE(  10)		D = (int)68;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",11,0xf4374c42)
HXLINE(  11)		E = (int)69;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",12,0xf4374c42)
HXLINE(  12)		F = (int)70;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",13,0xf4374c42)
HXLINE(  13)		G = (int)71;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",14,0xf4374c42)
HXLINE(  14)		H = (int)72;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",15,0xf4374c42)
HXLINE(  15)		I = (int)73;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",16,0xf4374c42)
HXLINE(  16)		J = (int)74;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",17,0xf4374c42)
HXLINE(  17)		K = (int)75;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",18,0xf4374c42)
HXLINE(  18)		L = (int)76;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",19,0xf4374c42)
HXLINE(  19)		M = (int)77;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",20,0xf4374c42)
HXLINE(  20)		N = (int)78;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",21,0xf4374c42)
HXLINE(  21)		O = (int)79;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",22,0xf4374c42)
HXLINE(  22)		P = (int)80;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",23,0xf4374c42)
HXLINE(  23)		Q = (int)81;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",24,0xf4374c42)
HXLINE(  24)		R = (int)82;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",25,0xf4374c42)
HXLINE(  25)		S = (int)83;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",26,0xf4374c42)
HXLINE(  26)		T = (int)84;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",27,0xf4374c42)
HXLINE(  27)		U = (int)85;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",28,0xf4374c42)
HXLINE(  28)		V = (int)86;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",29,0xf4374c42)
HXLINE(  29)		W = (int)87;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",30,0xf4374c42)
HXLINE(  30)		X = (int)88;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",31,0xf4374c42)
HXLINE(  31)		Y = (int)89;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",32,0xf4374c42)
HXLINE(  32)		Z = (int)90;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",34,0xf4374c42)
HXLINE(  34)		ALTERNATE = (int)18;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",35,0xf4374c42)
HXLINE(  35)		BACKQUOTE = (int)192;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",36,0xf4374c42)
HXLINE(  36)		BACKSLASH = (int)220;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",37,0xf4374c42)
HXLINE(  37)		BACKSPACE = (int)8;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",38,0xf4374c42)
HXLINE(  38)		BREAK = (int)19;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",39,0xf4374c42)
HXLINE(  39)		CAPS_LOCK = (int)20;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",40,0xf4374c42)
HXLINE(  40)		COMMA = (int)188;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",41,0xf4374c42)
HXLINE(  41)		COMMAND = (int)15;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",42,0xf4374c42)
HXLINE(  42)		CONTROL = (int)17;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",43,0xf4374c42)
HXLINE(  43)		DELETE = (int)46;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",44,0xf4374c42)
HXLINE(  44)		DOWN = (int)40;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",45,0xf4374c42)
HXLINE(  45)		END = (int)35;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",46,0xf4374c42)
HXLINE(  46)		ENTER = (int)13;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",47,0xf4374c42)
HXLINE(  47)		EQUAL = (int)187;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",48,0xf4374c42)
HXLINE(  48)		ESCAPE = (int)27;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",49,0xf4374c42)
HXLINE(  49)		F1 = (int)112;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",50,0xf4374c42)
HXLINE(  50)		F2 = (int)113;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",51,0xf4374c42)
HXLINE(  51)		F3 = (int)114;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",52,0xf4374c42)
HXLINE(  52)		F4 = (int)115;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",53,0xf4374c42)
HXLINE(  53)		F5 = (int)116;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",54,0xf4374c42)
HXLINE(  54)		F6 = (int)117;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",55,0xf4374c42)
HXLINE(  55)		F7 = (int)118;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",56,0xf4374c42)
HXLINE(  56)		F8 = (int)119;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",57,0xf4374c42)
HXLINE(  57)		F9 = (int)120;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",58,0xf4374c42)
HXLINE(  58)		F10 = (int)121;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",59,0xf4374c42)
HXLINE(  59)		F11 = (int)122;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",60,0xf4374c42)
HXLINE(  60)		F12 = (int)123;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",61,0xf4374c42)
HXLINE(  61)		F13 = (int)124;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",62,0xf4374c42)
HXLINE(  62)		F14 = (int)125;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",63,0xf4374c42)
HXLINE(  63)		F15 = (int)126;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",64,0xf4374c42)
HXLINE(  64)		HOME = (int)36;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",65,0xf4374c42)
HXLINE(  65)		INSERT = (int)45;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",66,0xf4374c42)
HXLINE(  66)		LEFT = (int)37;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",67,0xf4374c42)
HXLINE(  67)		LEFTBRACKET = (int)219;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",68,0xf4374c42)
HXLINE(  68)		MINUS = (int)189;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",69,0xf4374c42)
HXLINE(  69)		NUMBER_0 = (int)48;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",70,0xf4374c42)
HXLINE(  70)		NUMBER_1 = (int)49;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",71,0xf4374c42)
HXLINE(  71)		NUMBER_2 = (int)50;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",72,0xf4374c42)
HXLINE(  72)		NUMBER_3 = (int)51;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",73,0xf4374c42)
HXLINE(  73)		NUMBER_4 = (int)52;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",74,0xf4374c42)
HXLINE(  74)		NUMBER_5 = (int)53;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",75,0xf4374c42)
HXLINE(  75)		NUMBER_6 = (int)54;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",76,0xf4374c42)
HXLINE(  76)		NUMBER_7 = (int)55;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",77,0xf4374c42)
HXLINE(  77)		NUMBER_8 = (int)56;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",78,0xf4374c42)
HXLINE(  78)		NUMBER_9 = (int)57;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",79,0xf4374c42)
HXLINE(  79)		NUMLOCK = (int)144;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",80,0xf4374c42)
HXLINE(  80)		NUMPAD = (int)21;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",81,0xf4374c42)
HXLINE(  81)		NUMPAD_0 = (int)96;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",82,0xf4374c42)
HXLINE(  82)		NUMPAD_1 = (int)97;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",83,0xf4374c42)
HXLINE(  83)		NUMPAD_2 = (int)98;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",84,0xf4374c42)
HXLINE(  84)		NUMPAD_3 = (int)99;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",85,0xf4374c42)
HXLINE(  85)		NUMPAD_4 = (int)100;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",86,0xf4374c42)
HXLINE(  86)		NUMPAD_5 = (int)101;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",87,0xf4374c42)
HXLINE(  87)		NUMPAD_6 = (int)102;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",88,0xf4374c42)
HXLINE(  88)		NUMPAD_7 = (int)103;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",89,0xf4374c42)
HXLINE(  89)		NUMPAD_8 = (int)104;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",90,0xf4374c42)
HXLINE(  90)		NUMPAD_9 = (int)105;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",91,0xf4374c42)
HXLINE(  91)		NUMPAD_ADD = (int)107;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",92,0xf4374c42)
HXLINE(  92)		NUMPAD_DECIMAL = (int)110;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",93,0xf4374c42)
HXLINE(  93)		NUMPAD_DIVIDE = (int)111;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",94,0xf4374c42)
HXLINE(  94)		NUMPAD_ENTER = (int)108;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",95,0xf4374c42)
HXLINE(  95)		NUMPAD_MULTIPLY = (int)106;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",96,0xf4374c42)
HXLINE(  96)		NUMPAD_SUBTRACT = (int)109;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",97,0xf4374c42)
HXLINE(  97)		PAGE_DOWN = (int)34;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",98,0xf4374c42)
HXLINE(  98)		PAGE_UP = (int)33;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",99,0xf4374c42)
HXLINE(  99)		PERIOD = (int)190;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",100,0xf4374c42)
HXLINE( 100)		QUOTE = (int)222;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",101,0xf4374c42)
HXLINE( 101)		RIGHT = (int)39;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",102,0xf4374c42)
HXLINE( 102)		RIGHTBRACKET = (int)221;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",103,0xf4374c42)
HXLINE( 103)		SEMICOLON = (int)186;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",104,0xf4374c42)
HXLINE( 104)		SHIFT = (int)16;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",105,0xf4374c42)
HXLINE( 105)		SLASH = (int)191;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",106,0xf4374c42)
HXLINE( 106)		SPACE = (int)32;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",107,0xf4374c42)
HXLINE( 107)		TAB = (int)9;
            	}
{
            	HX_STACK_FRAME("openfl._legacy.ui.Keyboard","boot",0x972e4583,"openfl._legacy.ui.Keyboard.boot","openfl/_legacy/ui/Keyboard.hx",108,0xf4374c42)
HXLINE( 108)		UP = (int)38;
            	}
}

} // end namespace openfl
} // end namespace _legacy
} // end namespace ui
